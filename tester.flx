// Temporarily, test script in top level of repo
include "web/low_res_time";
open LowResTime;
var tod = #time_t.gmtime.asctime;


open Regdef;

include "./flx/lib/winterfell_driver";
include "./flx/lib/winterfell_public";
include "./flx/lib/parse_wlog";
include "./flx/lib/cairo_verifier";


// Start by parsing output from Winterfell run

// RUN AIRSCRIPT 
var result = System::system "cargo run --bin airc -- transpile -i examples/example.air";
println$ "AIRSCIPT result = " + result.str;
if result != 0 perform System::exit result;

build_winterfell();

// PARSE PUBLIC INPUT NAMES FILE

var pub_data = parse_winterfell_public("example.public"); 

// PARSE WINTERFELL GENERATED LOG FILE 
var test_filename = "examples/tests/cairo/test_air.cairo";
var log_filename = "example.wlog";


fun arr2list (x:string) {
  return split(x.[1 to -1],",");
}

var parse_data = parse_wlog(log_filename);

var output = gen_cairo_verifier parse_data;
 
save(test_filename, output);

// COPY VERIFIER TO WHERE PROTOSTAR CAN FIND IT
result = System::system "cp examples/example.cairo examples/tests/cairo/example.cairo";
println$ "CP result = " + result.str;

// RUN PROTOSTAR CAIRO VERIFIER TEST
result = System::system "protostar --no-color -p unit test";
println$ "PROTOSTAR result = " + result.str;


