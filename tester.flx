// Temporarily, test script in top level of repo

// To print the time in generated files
// Include subroutines
include "./flx/lib/winterfell_public";
include "./flx/lib/parse_wlog";
include "./flx/lib/cairo_verifier";
include "web/low_res_time";
var tod = #{
  open LowResTime;
  return #time_t.gmtime.asctime.[to -1] + " UTC"; // time of day for stamp
};

// ************************************************************* 
// Filenames
// Aero input and output

fun / (x:string, y:string) => Filename::join (x,y);

var input_path_f = "test/input/example";
begin 
  var f = System::argv 1;
  if f == "--help" do
    println$ "Usage: flx tester.flx testdir/<testname>" ;
    println$ "  input0: testdir/<testname>.air";
    println$ "  input1: testdir/<testname>_winterfell_main.rs";
    println$ "  transpile workspace: workspace/<testname>";
    System::exit 0;
  done
  if f != "" perform
    input_path_f = f;
end

var stamp = "// TESTCASE: " + input_path_f + " AT: "  + tod ;

proc stamp_file(f:string) {
  println$ "[tester] STAMPING " + f;
  var inp = load f;
  println$ "File length " + inp.len.str;
  save(f,stamp + "\n" + inp);
}

var testname = Filename::basename input_path_f;
var pathname_f = Filename::dirname input_path_f;

// INPUTS
var input_air_f = pathname_f/(testname + ".air");
var winterfell_main_f = pathname_f/(testname + "_winterfell_main.rs"); // Hard coded top level Winterfell mainline for this test

println$ input_air_f,winterfell_main_f;

// FIRST STAGE OUTPUTS
var workspace_f = "test/workspace";
var workdir = workspace_f/testname;
C_hack::ignore(Directory::mkdir workdir);
var copied_air_f = workdir/(testname + ".air");

begin
  var result = System::system$ "cp " +input_air_f + " "  +  copied_air_f;
  println$ "[tester] COPIED " + input_air_f + " to " + copied_air_f + ", result="+result.str; 
  if result != 0 perform System::exit result;
  //stamp_file copied_air_f;
end


var generated_cairo_f = workdir/(testname + ".cairo");
var generated_rust_f = workdir/(testname + ".rs");

println$ "[tester] processing " + input_air_f + " and " + winterfell_main_f;
println$ "[tester] generating " + generated_cairo_f + " and " + generated_rust_f
;

// FIXED Winterfell inputs
var file_to_copy_winterfell_main_to_f = "examples/tests/winterfell/src/main.rs"; 
var file_to_copy_generated_rust_to_f = "examples/tests/winterfell/src/example.rs"; 

// FIXED Winterfell outputs
var public_names_f = "example.public";
var log_filename_f = "example.wlog";

// FIXED Protostar inputs
var protostar_test_filename_f = "examples/tests/cairo/test_air.cairo"; // generated by this Felix script
var file_to_copy_generated_cairo_to_f = "examples/tests/cairo/example.cairo"; // generated by Aero

 
// ************************************************************* 
// 1, RUN AIRSCRIPT 
begin 
  var result = System::system$ "cargo run --bin airc -- transpile -i " + copied_air_f ;
  if result != 0 perform System::exit result;
  println$ "[tester] AIRSCIPT generated " + generated_rust_f + " and " + generated_cairo_f;
  stamp_file generated_cairo_f;
  stamp_file generated_rust_f;
end


// ************************************************************* 
// BUILD AND RUN HACKED WINTERFELL FOR THIS AIR
// We do this for two reasons:
//
// 1. To get data out of the prover the verifier needs
// 2. To get values out of the Rust verifier to check our cairo one
//
// The hacked Winterfell contains log outputs which we subsequently
// parse to get the requisite values.


// ************************************************************* 
// 2. COPY WINTERFELL VERIFIER (Rust code)
begin
  var result = System::system$ "cp " + generated_rust_f + " "  +  file_to_copy_generated_rust_to_f;
  if result != 0 perform System::exit result;
  println$ "[tester] COPIED " + generated_rust_f + " to " + file_to_copy_generated_rust_to_f;
end

// ************************************************************* 
// 3. COPY WINTERFELL HAND CODED MAIN (Rust code)
begin
  var result = System::system$ "cp " +winterfell_main_f + " "  +  file_to_copy_winterfell_main_to_f;
  if result != 0 perform System::exit result;
  println$ "[tester] COPIED " + winterfell_main_f + " to " + file_to_copy_winterfell_main_to_f;
end

// ************************************************************* 
// 4. RUN WINTERFELL to get required data and results for comparison
begin
  var result = System::system "RUSTFLAGS=-Awarnings cargo run --bin winterfell --release";
  if result != 0 perform System::exit result;
  println$ "[tester] WINTERFELL processing complete"; 
end

// ************************************************************* 
// 5a. PARSE PUBLIC INPUT NAMES FILE
var pub_data = parse_winterfell_public(public_names_f); 

// 5b. PARSE WINTERFELL GENERATED LOG FILE 
var parse_data = parse_wlog(log_filename_f);


// ************************************************************* 
// 6. GENERATE THE CAIRO VERIFIER and SAVE IT
begin
  var output = gen_cairo_verifier parse_data pub_data;
  save(protostar_test_filename_f, output);
end

// ************************************************************* 
// 7. COPY VERIFIER TO WHERE PROTOSTAR CAN FIND IT
begin 
  var result = System::system ("cp " + generated_cairo_f + " " + file_to_copy_generated_cairo_to_f);
  if result != 0 perform System::exit result;
  println$ "[tester] COPIED " + generated_cairo_f + " to " + file_to_copy_generated_cairo_to_f;
end

// ************************************************************* 
// 8. RUN PROTOSTAR CAIRO VERIFIER TEST
begin
  var result = System::system "protostar --no-color -p unit test";
  if result != 0 perform System::exit result;
  println$ "PROTOSTAR result = " + result.str;
end


